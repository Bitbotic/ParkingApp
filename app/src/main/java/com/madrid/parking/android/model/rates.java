package com.madrid.parking.android.model;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 9/14/2015 2:13:24 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;

import java.util.Hashtable;

import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class rates implements KvmSerializable {

    public String description;
    public int minutesStayEnd;
    public boolean minutesStayEndSpecified;
    public int minutesStayInitation;
    public boolean minutesStayInitationSpecified;
    public String periodPricing;
    public double rate;
    public boolean rateSpecified;
    public String scheduleEnd;
    public String scheduleInitial;

    public rates() {
    }

    public rates(SoapObject soapObject) {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("description")) {
            Object obj = soapObject.getProperty("description");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                description = j.toString();
            } else if (obj != null && obj instanceof String) {
                description = (String) obj;
            }
        }
        if (soapObject.hasProperty("minutesStayEnd")) {
            Object obj = soapObject.getProperty("minutesStayEnd");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                minutesStayEnd = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                minutesStayEnd = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("minutesStayEndSpecified")) {
            Object obj = soapObject.getProperty("minutesStayEndSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                minutesStayEndSpecified = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                minutesStayEndSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("minutesStayInitation")) {
            Object obj = soapObject.getProperty("minutesStayInitation");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                minutesStayInitation = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                minutesStayInitation = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("minutesStayInitationSpecified")) {
            Object obj = soapObject.getProperty("minutesStayInitationSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                minutesStayInitationSpecified = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                minutesStayInitationSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("periodPricing")) {
            Object obj = soapObject.getProperty("periodPricing");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                periodPricing = j.toString();
            } else if (obj != null && obj instanceof String) {
                periodPricing = (String) obj;
            }
        }
        if (soapObject.hasProperty("rate")) {
            Object obj = soapObject.getProperty("rate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                rate = Double.parseDouble(j.toString());
            } else if (obj != null && obj instanceof Number) {
                rate = (Double) obj;
            }
        }
        if (soapObject.hasProperty("rateSpecified")) {
            Object obj = soapObject.getProperty("rateSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                rateSpecified = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                rateSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("scheduleEnd")) {
            Object obj = soapObject.getProperty("scheduleEnd");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                scheduleEnd = j.toString();
            } else if (obj != null && obj instanceof String) {
                scheduleEnd = (String) obj;
            }
        }
        if (soapObject.hasProperty("scheduleInitial")) {
            Object obj = soapObject.getProperty("scheduleInitial");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                scheduleInitial = j.toString();
            } else if (obj != null && obj instanceof String) {
                scheduleInitial = (String) obj;
            }
        }
    }

    @Override
    public Object getProperty(int arg0) {
        switch (arg0) {
            case 0:
                return description;
            case 1:
                return minutesStayEnd;
            case 2:
                return minutesStayEndSpecified;
            case 3:
                return minutesStayInitation;
            case 4:
                return minutesStayInitationSpecified;
            case 5:
                return periodPricing;
            case 6:
                return rate;
            case 7:
                return rateSpecified;
            case 8:
                return scheduleEnd;
            case 9:
                return scheduleInitial;
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 10;
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "description";
                break;
            case 1:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "minutesStayEnd";
                break;
            case 2:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "minutesStayEndSpecified";
                break;
            case 3:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "minutesStayInitation";
                break;
            case 4:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "minutesStayInitationSpecified";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "periodPricing";
                break;
            case 6:
                info.type = Double.class;
                info.name = "rate";
                break;
            case 7:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "rateSpecified";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "scheduleEnd";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "scheduleInitial";
                break;
        }
    }


    public String getInnerText() {
        return null;
    }


    public void setInnerText(String s) {
    }


    @Override
    public void setProperty(int arg0, Object arg1) {
    }

}
